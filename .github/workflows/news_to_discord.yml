name: Post RSS to Discord

on:
  workflow_dispatch:  # 手動実行を有効にする

permissions:
  contents: write  # リポジトリへの書き込み権限

jobs:
  post_news:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install feedparser requests pyyaml

      # -----------------------------
      # 1) Python スクリプト実行
      #    失敗時は sys.exit(1) ＋
      #    set_github_action_error_message("...") で
      #    steps.<id>.outputs.error_message に格納
      # -----------------------------
      - name: Run Python script
        id: python_script  # 後続ステップがこの outputs を参照
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          GUILD_ID: ${{ secrets.GUILD_ID }}
          FORUM_CHANNEL_ID: ${{ secrets.FORUM_CHANNEL_ID }}
        run: |
          python post_news.py

      # -----------------------------
      # 2) 成功時のみ posted_links.yaml をコミット＆プッシュ
      # -----------------------------
      - name: Commit and push updated posted_links.yaml
        if: success()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add posted_links.yaml
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update posted_links.yaml"
            git push origin ${{ github.ref }}
          fi

      # -----------------------------
      # 3) 失敗時のみ、Discord に通知
      #    エラーメッセージを sed でエスケープして JSON 化
      # -----------------------------
      - name: Notify Discord on failure
        if: failure()
        env:
          POST_ERROR_NOTIFICATION: ${{ secrets.POST_ERROR_NOTIFICATION }}
        run: |
          echo "=== GitHub Actions failure notification ==="

          # 1) Pythonスクリプトが set_github_action_error_message()
          #    で書き込んだ出力をシェル変数に格納
          RAW_MSG="${{ steps.python_script.outputs.error_message }}"

          # デバッグ用に生のエラーメッセージを表示したい場合はここで echo
          echo "::group::[DEBUG] RAW_MSG"
          echo "$RAW_MSG"
          echo "::endgroup::"

          # 2) sed で JSON 文字列用にエスケープ
          #    - ダブルクォート (") → \" に変換
          #    - 改行 (\n) → \\n に変換
          #  printf '%s' "$RAW_MSG" によって余計なシェル展開を防ぐ
          ESCAPED_MSG=$(printf '%s' "$RAW_MSG" \
            | sed 's/"/\\"/g' \
            | sed ':a;N;$!ba;s/\n/\\n/g'
          )

          # 必要ならさらに { や } などもエスケープする場合があります

          # 3) curl で Discord に投稿
          #    ここでは content に $ESCAPED_MSG を埋め込んでも
          #    JSON が壊れないようになっている
          curl -X POST -H "Content-Type: application/json" \
          -d "{
                \"content\": \"**GitHub Actions Error**: RSS to Discord 投稿中にエラーが発生しました。\\n\\n\
                **ジョブ番号**: #${{ github.run_number }}\\n\
                **ジョブURL**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\\n\\n\
                **エラーメッセージ**: $ESCAPED_MSG\"
              }" \
          "$POST_ERROR_NOTIFICATION"
